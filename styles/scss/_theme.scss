@import "mixins";
@import "sizes";

$color1: #2d7ed2;
$color2: #38b2ff;
$color2B: rgba(56, 178, 255, 0.5);
$color3: #453ad8;
$color5: #464646;
$color6: #323232;
$color7: #e6e6e6;
$color8: #f0f0f0;
$color9: FireBrick;

html {
  // Set main text color
  color: $color6;
  // Set main background color
  background: $color7;
  body {
    // offset-x | offset-y | blur-radius | color
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  }
}

header {
  h1 {
    // Main website heading color
    color: $color7;
    // Main website background color
    background-color: $color2;
    // offset-x | offset-y | blur-radius | color
    text-shadow: 3px 0 0 $color6;
    // Set background image to the main heading box model
    background-image: url("../../img/backimage2.jpg");
    // Make the background image cover the h1 box
    background-size: cover;
  }
}

.navWrapper {
  // Set navbar background color
  background-color: $color1;
}

nav {
  li {
    a {
      text-decoration: none;
      // Set navbar text color
      color: $color7;
    }
  }
}

article {
  // Set border and values for all articles
  border: solid 2px $color8;
  background: white;

  .codeExampleWrap,
  .message-mobile,
  .message-tablet {
    // Set background for the article example box
    background: $color6;
    color: $color8;
  }
}

#bckBtn {
  // Set to-top button text color
  color: $color8;
  // Set to-top background color
  background-color: $color2B;
  // Load to-top background image
  background-image: url("../../img/bkbutton-v5w.gif");
  // Set background image size
  background-size: 35px;
  // Disable default image repeat
  background-repeat: no-repeat;
  // Position image to the center
  background-position: center;
}

.exampleBackground {
  background-color: $color6;
}

.floatExampleBox {
  background-color: $color9;
}

.floatExampleWrap > p {
  color: $color7;
  padding: 10px;
}

#section_flexbox .styleNestedBoxes {
  margin: 15px 0;
}

//  CSS Grid Section

.styleNestedBoxes,
.floatExampleWrap {
  border: 2px solid $color9;
  border-radius: $spacing-smaller;
  color: black;
}

.styleNestedBoxes > div {
  border: 1px solid #ccc;
  background: #eee;
  padding: 1em;
  margin: 10px;
  border-radius: $spacing-smaller;
}

.styleNestedBoxes > div:nth-child(odd) {
  background: #ddd;
}

// On a side note, "!important" ups the importance of any property

.solidBorder2 {
  border: 2px solid black !important;
}

// Flexbox Section

// Code that works only on mobile devices
@media only screen and (max-width: $screen-size-small) {
  .active .hamMenu {
    // middle bit of the mobile menu
    background: rgba(0, 0, 0, 0);
    transition: 250ms;
  }
  .active .hamMenu:before {
    // animation of the top mobile menu bit
    top: 0;
    transform: rotate(-135deg);
  }
  .active .hamMenu:after {
    // animation of the bottom mobile menu bit
    top: 0;
    transform: rotate(135deg);
  }
  .navWrapper.active {
    // animate menu on opening
    // keyframe | duration | endstate
    animation: mobMnuOpen 300ms forwards;
  }
  .navWrapper.inactive {
    // animate menu on closing
    // keyframe | duration | endstate
    animation: mobMnuClose 300ms forwards;
  }
  @keyframes mobMnuOpen {
    // What should happen at the beggning
    from {
      height: 69px;
    }
    // What should happen at the end
    to {
      height: 481px;
    }
  }
  @keyframes mobMnuClose {
    from {
      height: 481px;
    }
    to {
      height: 69px;
    }
  }
}

// Code that works only on larger devices
@media only screen and (min-width: $screen-size-medium) {
  nav li a {
    @include hoverNfocus() {
      // animation: name | duration | transitions | delay | playState
      animation: navAnimate 0.15s ease-in-out 0s forwards;
    }
  }
  // article {
  //   @include hoverNfocus() {
  //     border: dotted 2px $color2;
  //   }
  // }

  #bckBtn {
    @include hoverNfocus() {
      // animation: keyframeName | duration | transitions | delay | last keyframe
      animation: myBtnAnimate 0.15s ease-in-out 0s forwards;
    }
  }
  @keyframes navAnimate {
    // What should happen at the beggning
    from {
      color: $color7;
    }
    // What should happen at the end
    to {
      color: $color2;
    }
  }
  @keyframes myBtnAnimate {
    from {
      background-color: $color2B;
    }
    to {
      background-color: $color2;
      color: $color6;
    }
  }
}
